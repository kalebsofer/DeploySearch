x-env-file: &env-file
  env_file: .env.dev

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - ENV=development
      - BACKEND_URL=http://backend:8051
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network-dev
    ports:
      - "8501:8501"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - ENV=development
      - MINIO_URL=minio:9000
      - MINIO_SECURE=false
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - app-network-dev
    ports:
      - "8051:8051"

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data_dev:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - app-network-dev

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - app-network-dev

  reinforcement:
    build: 
      context: ./reinforcement
      dockerfile: Dockerfile
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_BUCKET=${MINIO_BUCKET}
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - app-network-dev

networks:
  app-network-dev:
    driver: bridge

volumes:
  minio_data_dev:
  postgres_data_dev: